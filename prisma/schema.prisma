generator client {
  provider      = "prisma-client-js"
  output        = "../node_modules/.prisma/client"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  firstName String?   @map("first_name") @db.VarChar(40)
  lastName  String?   @map("last_name") @db.VarChar(40)
  role      Role      @default(USER)
  archived  Boolean   @default(false)
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamp(0)
  tokens     Token[]
  companies   Company[]

  @@map("users")
}

model Token {
  refreshToken String   @id @unique @map("refresh_token") @db.VarChar(255)
  userId       Int      @map("user_id")
  expiredAt    DateTime @map("expired_at") @db.Timestamp(0)
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("tokens")
}

model Company {
  id         Int       @id @default(autoincrement())
  name       String    @unique @db.VarChar(50)
  about      String?   @db.Text()
  logoUrl    String?   @map("logo_url") @db.VarChar(255)
  verified   Boolean   @default(false)
  archived   Boolean   @default(false)
  userId     Int       @map("user_id")
  categoryId Int?      @map("category_id")
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt  DateTime  @updatedAt @map("updated_at") @db.Timestamp(0)
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category   Category? @relation(fields: [categoryId], references: [id])
  benefits    Benefit[]
  stores      Store[]

  @@map("companies")
}

model Bank {
  id        Int       @id @default(autoincrement())
  name      String    @unique @db.VarChar(50)
  logoUrl   String?   @map("logo_url") @db.VarChar(255)
  archived  Boolean   @default(false)
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamp(0)
  benefits   Benefit[]

  @@map("banks")
}

model Benefit {
  id        Int         @id @default(autoincrement())
  type      BenefitType
  size      Int         @db.TinyInt()
  message   String?     @db.Text()
  startAt   DateTime    @map("start_at") @db.DateTime()
  endAt     DateTime    @map("end_at") @db.DateTime()
  archived  Boolean     @default(false)
  companyId Int         @map("company_id")
  bankId    Int?        @map("bank_id")
  promoCode String?     @map("promo_code") @db.VarChar(20)
  createdAt DateTime    @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime    @updatedAt @map("updated_at") @db.Timestamp(0)
  company   Company     @relation(fields: [companyId], references: [id], onDelete: Cascade)
  bank      Bank?       @relation(fields: [bankId], references: [id], onDelete: Cascade)
  stores    Store[]

  @@map("benefits")
}

model Store {
  id        Int       @id @default(autoincrement())
  latitude  Float
  longitude Float
  openAt    String    @map("open_at") @db.VarChar(5)
  closeAt   String    @map("close_at") @db.VarChar(5)
  archived  Boolean   @default(false)
  companyId Int       @map("company_id")
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamp(0)
  company   Company   @relation(fields: [companyId], references: [id], onDelete: Cascade)
  benefits   Benefit[]

  @@map("stores")
}

model Category {
  id      Int       @id @default(autoincrement())
  value   String    @db.VarChar(40)
  companies Company[]

  @@map("categories")
}

model Country {
  id    Int    @id @default(autoincrement())
  value String @db.VarChar(60)

  @@map("countries")
}

model City {
  id        Int    @id @default(autoincrement())
  countryId Int    @map("country_id")
  value     String @db.VarChar(40)

  @@map("cities")
}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}

enum BenefitType {
  DISCOUNT
  CASHBACK
  PROMO_CODE
}
