generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  role      Role      @default(USER)
  archived  Boolean   @default(false)
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamp(0)
  token     Token[]
  company   Company[]

  @@map("users")
}

model Token {
  refreshToken String   @id @unique @map("refresh_token") @db.VarChar(255)
  userId       Int      @map("user_id")
  expiredAt    DateTime @map("expired_at") @db.Timestamp(0)
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("tokens")
}

model Company {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(50)
  about     String?  @db.MediumText()
  logoUrl   String?  @map("logo_url") @db.VarChar(255)
  verified  Boolean  @default(false)
  archived  Boolean  @default(false)
  userId    Int      @map("user_id")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(0)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("companies")
}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}
